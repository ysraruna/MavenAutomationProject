package com.application.test;

import java.io.IOException;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.Iterator;
import java.util.List;
import java.util.concurrent.TimeUnit;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.Test;

public class BrokenLinks {
	
WebDriver driver;
static int validLinkCount=0;

@BeforeMethod
public void setUp()
{
	System.setProperty("webdriver.chrome.driver", "C:\\Users\\shaurish\\Desktop\\Selenium_Training\\chromedriver_win32\\chromedriver.exe");
	driver=new ChromeDriver();	
}
	
	@Test
	public void findBrokenLinks()
	{
		 //Maximize the browser
		 driver.manage().window().maximize();
		 //Implicit wait for 10 seconds
		 driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
		 //To launch softwaretestingmaterial.com
		 driver.get("https://www.google.co.in/");
		 //Used tagName method to collect the list of items with tagName "a"
		 //findElements - to find all the elements with in the current page. It returns a list of all webelements or an empty list if nothing matches
		 List<WebElement> links = driver.findElements(By.tagName("a")); 
		 //To print the total number of links
		 System.out.println("Total links are "+links.size()); 
		 //used for loop to 
		 for(int i=0; i<links.size(); i++) 
		 {
			String url= links.get(i).getAttribute("href");
			System.out.println("url is:"+url);
			verifyLink(url); 
		 } 
	}		 

	public static void verifyLink(String urlLink) {
		try 
		{
			URL link = new URL(urlLink);
			HttpURLConnection httpConn =(HttpURLConnection)link.openConnection();
			httpConn.setConnectTimeout(2000);
			httpConn.connect();
			if(httpConn.getResponseCode()== 200) { 
				System.out.println(urlLink+" - "+httpConn.getResponseMessage()+" "+"thisis valid link");
			 }
			 if(httpConn.getResponseCode()== 404) {
			 System.out.println(urlLink+" - "+httpConn.getResponseMessage()+" "+"thisis valid link");
			 }
		}
		catch (Exception e) {
			//e.printStackTrace();
		}
			    } 
			}